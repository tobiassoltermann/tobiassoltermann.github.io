<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>Tobias Soltermann</title>
    <link href="https://tobiassoltermann.github.io/feed.xml" rel="self" />
    <link href="https://tobiassoltermann.github.io" />
    <updated>2024-09-02T20:05:19+02:00</updated>
    <author>
        <name>Tobias Soltermann</name>
    </author>
    <id>https://tobiassoltermann.github.io</id>

    <entry>
        <title>Sandsack* App</title>
        <author>
            <name>Tobias Soltermann</name>
        </author>
        <link href="https://tobiassoltermann.github.io/sandsack-app.html"/>
        <id>https://tobiassoltermann.github.io/sandsack-app.html</id>

        <updated>2024-09-02T20:05:19+02:00</updated>
            <summary>
                <![CDATA[
                    * bags filled with sand (crumble of glass, to be precise) I have designed and built an app supporting the&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                
  <p>
    * bags filled with sand (crumble of glass, to be precise)
  </p>

    <h1 id="overview">
      Overview
    </h1>

  <p>
    I have designed and built an app supporting the <a href="https://www.ag.ch/de/dgs/militaerbevoelkerungsschutz/bevoelkerungsschutz/katastropheneinsatzelement/katastropheneinsatzelement.jsp" target="_blank">Emergency Response Team of Canton of Aargau</a>&nbsp;in controlling flood situations. Built using <a href="https://expo.io/" target="_blank">Expo</a> (<a href="https://github.com/facebook/react-native" target="_blank">ReactNative</a>).<br>
  </p>

  <div  class="gallery-wrapper">
    <div class="gallery" data-columns="3">
      <figure class="gallery__item">
      <a href="https://tobiassoltermann.github.io/media/posts/5/gallery/01.png" data-size="640x1136">
        <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/5/gallery/01-thumbnail.png" height="1136" width="640" alt="" >
      </a>
      
    </figure><figure class="gallery__item">
      <a href="https://tobiassoltermann.github.io/media/posts/5/gallery/04.png" data-size="640x1136">
        <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/5/gallery/04-thumbnail.png" height="1136" width="640" alt="" >
      </a>
      
    </figure><figure class="gallery__item">
      <a href="https://tobiassoltermann.github.io/media/posts/5/gallery/05.png" data-size="640x1136">
        <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/5/gallery/05-thumbnail.png" height="1136" width="640" alt="" >
      </a>
      
    </figure>
    </div>
  </div>

    <h1 id="details">
      Details
    </h1>

  <p>
    Heavy rains can create floods, filling cellars or rendering streets unusable to traffic. Water flows can be redirected by the placement of bags - requiring quick action.<br><br>When on site, the emergency response team needed a tool to increase their effectiveness by providing the ability to:<br><br>calculate the amount of bags required, and<br><br>order some bags to the emergency site.<br><br>Together with the Cantonal Disaster Response Unit, I designed and built a smartphone app available on iOS and Android.<br>
  </p>

    <h2 id="use-case-1-calculation-of-required-sandbags">
      Use case #1: Calculation of required sandbags
    </h2>

  <p>
    Sand bags are not placed randomly to create walls, but according to a pre-defined algorithm. One use case is to calculate the number of bags required  to create these walls and how they should be layered.<br>
  </p>

  <p>
    Two inputs are required for that: <b>length</b> and <b>height</b>. The app then calculates various information:
  </p>

  <ul>
    <li># of layers</li><li># bags per layer</li><li># bags overall</li><li># palettes (bags can be delivered in palettes)</li>
  </ul>

  <p>
    The app also displays the costs raised by the production of these sandbags, as they can be ordered by any surrounding firefighting organization.<br>
  </p>

  <div  class="gallery-wrapper">
    <div class="gallery" data-columns="3">
      <figure class="gallery__item">
      <a href="https://tobiassoltermann.github.io/media/posts/5/gallery/03.png" data-size="640x1136">
        <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/5/gallery/03-thumbnail.png" height="1136" width="640" alt="" >
      </a>
      
    </figure><figure class="gallery__item">
      <a href="https://tobiassoltermann.github.io/media/posts/5/gallery/image-asset.png" data-size="640x1136">
        <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/5/gallery/image-asset-thumbnail.png" height="1136" width="640" alt="" >
      </a>
      
    </figure><figure class="gallery__item">
      <a href="https://tobiassoltermann.github.io/media/posts/5/gallery/05-1.png" data-size="640x1136">
        <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/5/gallery/05-1-thumbnail.png" height="1136" width="640" alt="" >
      </a>
      
    </figure>
    </div>
  </div>

  <p>
    The sandbags are held in one or two central storage locations, and if required, produced on demand by the KKE. In an emergency, they need to be delivered to the emergency site, which can be initiated by the supervisor on site.
  </p>

  <p>
    The supervisor can collect the bags in one of the central locations, or have them delivered to the emergency site. In the latter case, they can use the Google Maps integration to calculate the distance, and the delivery costs are also displayed.<br><br>Further, an order can be placed which is then processed by the central team. To avoid recurring costs, no server-side components were used.
  </p>

  <p>
    Using the built-in webhook plugin, the order is sent into a previously configured <a href="https://slack.com/" target="_blank">Slack</a> channel.
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/5/slack.png" height="490" width="742" alt=""  sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://tobiassoltermann.github.io/media/posts/5/responsive/slack-xs.png 384w ,https://tobiassoltermann.github.io/media/posts/5/responsive/slack-sm.png 600w ,https://tobiassoltermann.github.io/media/posts/5/responsive/slack-md.png 768w ,https://tobiassoltermann.github.io/media/posts/5/responsive/slack-lg.png 1200w ,https://tobiassoltermann.github.io/media/posts/5/responsive/slack-xl.png 1600w">
      
    </figure>

    <h2 id="use-case-3-links-to-documents-andamp-administration">
      Use case #3: Links to documents &amp; Administration
    </h2>

  <p>
    The central administration can also publish links, effectively making urgently needed guideline, regulation and other documents available to the supervisors on the emergency site.<br>
  </p>

  <div  class="gallery-wrapper">
    <div class="gallery" data-columns="3">
      <figure class="gallery__item">
      <a href="https://tobiassoltermann.github.io/media/posts/5/gallery/06.png" data-size="640x1136">
        <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/5/gallery/06-thumbnail.png" height="1136" width="640" alt="" >
      </a>
      
    </figure><figure class="gallery__item">
      <a href="https://tobiassoltermann.github.io/media/posts/5/gallery/07.png" data-size="640x1136">
        <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/5/gallery/07-thumbnail.png" height="1136" width="640" alt="" >
      </a>
      
    </figure>
    </div>
  </div>

  <p>
    This can be controlled directly from within the app, if the user has been given permission. Also, they can configure enabled hubs from which sandbag production takes place.
  </p>

    <h1 id="technical-stufflessbrgreater">
      Technical stuff<br>
    </h1>

  <p>
    Built using the framework <a href="https://expo.io/" target="_blank">Expo</a>, which is basically a way to easily deploy <a href="https://github.com/facebook/react-native" target="_blank">ReactNative</a> apps. As React is based on web technologies, there was also a lot of JavaScript and CSS involved. The framework <a href="https://reactnativeelements.com/" target="_blank">React Native Elements</a> helped a lot to get a consistent look and feel across devices.  <a href="https://code.visualstudio.com/">Visual Studio Code</a> was used as a coding IDE.<br><br>Only two backend services were used:
  </p>

  <ul>
    <li>a Slack channel to deliver messages when something was ordered,</li><li>a <a href="https://www.dropbox.com/" target="_blank">Dropbox</a> integration to store configuration in a <a href="https://www.json.org/" target="_blank">JSON file</a>.</li>
  </ul>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Stop eavesdropping from contactless credit cards (RFID/NFC)</title>
        <author>
            <name>Tobias Soltermann</name>
        </author>
        <link href="https://tobiassoltermann.github.io/stop-eavesdropping-from-contactless-credit-cards-rfidnfc.html"/>
        <id>https://tobiassoltermann.github.io/stop-eavesdropping-from-contactless-credit-cards-rfidnfc.html</id>
        <media:content url="https://tobiassoltermann.github.io/media/posts/3/draft-2.png" medium="image" />

        <updated>2021-05-02T13:26:00+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://tobiassoltermann.github.io/media/posts/3/draft-2.png" alt="" />
                    The police of the canton of Aargau are giving away RFID blockers for free. These cards can be put in&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://tobiassoltermann.github.io/media/posts/3/draft-2.png" class="type:primaryImage" alt="" /></p>
                
  <p>
    The police of the canton of Aargau are giving away RFID blockers for free. These cards can be put in your wallet to prevent 3rd-parties exploiting contactless payment. They contacted me to build a protoype device demonstrating the effectiveness of these blocking cards on public exhibitions.
  </p>

  <p>
    The device lights up a lamp on the top when it detects a card, and turns off blank when it’s removed again.
  </p>

  <p>
    Here is a video of the working solution:<br>
  </p>

  <p>
    
  </p>
<div><iframe loading="lazy" width="854" height="480" data-responsive="false"
src="https://www.youtube.com/embed/lJyoT25dVTs?wmode=opaque&enablejsapi=1">
</iframe>
</div>

    <h1 id="creation-process">
      Creation process
    </h1>

    <h2 id="requirements-andamp-design">
      Requirements &amp; Design
    </h2>

  <p>
    The device needs to run multiple hours a day as it will be used in exhibitions. It should therefore have some autonomy and not rely on a mains connection. There are several ways to go about this. One of them is to use rechargeable batteries, another one would have been to use a USB powerbank. In case the device runs out of power, the power supply should be replaceable rather quickly.
  </p>

  <p>
    A good choice for the electronics would be some Arduino-based device, attached to a commonly available NFC/RFID reader. Even though the device will not be capable to fully read contactless cards, it will at least be able to detect their presence.
  </p>

  <p>
    I have first designed a circuit schema in <a href="https://www.kicad.org/" target="_blank">KiCad</a>.
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/3/schema.png" height="572" width="1500" alt=""  sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://tobiassoltermann.github.io/media/posts/3/responsive/schema-xs.png 384w ,https://tobiassoltermann.github.io/media/posts/3/responsive/schema-sm.png 600w ,https://tobiassoltermann.github.io/media/posts/3/responsive/schema-md.png 768w ,https://tobiassoltermann.github.io/media/posts/3/responsive/schema-lg.png 1200w ,https://tobiassoltermann.github.io/media/posts/3/responsive/schema-xl.png 1600w">
      
    </figure>

  <p>
    To give the customer a visual draft, I also created a 3D model in <a href="https://www.sketchup.com/" target="_blank">Sketchup</a>.
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/3/draft.png" height="1010" width="1500" alt=""  sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://tobiassoltermann.github.io/media/posts/3/responsive/draft-xs.png 384w ,https://tobiassoltermann.github.io/media/posts/3/responsive/draft-sm.png 600w ,https://tobiassoltermann.github.io/media/posts/3/responsive/draft-md.png 768w ,https://tobiassoltermann.github.io/media/posts/3/responsive/draft-lg.png 1200w ,https://tobiassoltermann.github.io/media/posts/3/responsive/draft-xl.png 1600w">
      
    </figure>

    <h2 id="build-process">
      Build process
    </h2>

  <p>
    The circuit is a s simple as it gets. An <a href="https://store.arduino.cc/arduino-mega-2560-rev3" target="_blank">Arduino Mega 2560</a> connected to an <a href="https://www.adafruit.com/product/789?gclid=Cj0KCQjwvr6EBhDOARIsAPpqUPE9n2tgJXR9Ignz_HIRT3IXGmV3lWJwLJqdiYJJG_tIuQRmrcniDsAaAqAXEALw_wcB" target="_blank">PN532 NFC controller shield from Adafruit</a>, powered by four AA rechargeable batteries. This is easy to implement and it happens so that they provide an ideal voltage of roughly 6 Volts. The batteries can easily be replaced by full ones while the empty ones charge up again. Restarting the device in-between only takes a few seconds and can easily be accepted.<br>
  </p>

  <p>
    For the housing, some melamine-coated 15mm multiplex is easy to work with and I had some leftover pieces from a previous project. Hence, I decided to go with it. The joinery is done with simple 8mm dowels. I have cut the board to pieces and dry-assembled them before gluing things in place.
  </p>

  <p>
    To accommodate the circuitry, some sort of pocket had to be routed (left-most picture). I wanted to get the RFID reader as close to the outside surface as possible in order to increase the available range to the maximum.
  </p>

  <div  class="gallery-wrapper">
    <div class="gallery" data-columns="3">
      <figure class="gallery__item">
      <a href="https://tobiassoltermann.github.io/media/posts/3/gallery/IMG_20201207_124239.jpg" data-size="500x1000">
        <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/3/gallery/IMG_20201207_124239-thumbnail.jpg" height="1000" width="500" alt="" >
      </a>
      
    </figure><figure class="gallery__item">
      <a href="https://tobiassoltermann.github.io/media/posts/3/gallery/IMG_20201207_154059.jpg" data-size="500x1000">
        <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/3/gallery/IMG_20201207_154059-thumbnail.jpg" height="1000" width="500" alt="" >
      </a>
      
    </figure><figure class="gallery__item">
      <a href="https://tobiassoltermann.github.io/media/posts/3/gallery/IMG_20201207_154047.jpg" data-size="500x1000">
        <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/3/gallery/IMG_20201207_154047-thumbnail.jpg" height="1000" width="500" alt="" >
      </a>
      
    </figure>
    </div>
  </div>

  <p>
    Batteries should be made easily accessible to facilitate quick replacement, which was done using a lid on the back side. To keep it closed, a magnet was put in place. Further, an on-off rocker switch was attached to the side to reduce energy consumption when not in use.&nbsp;
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/3/switch.png" height="298" width="300" alt=""  sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://tobiassoltermann.github.io/media/posts/3/responsive/switch-xs.png 384w ,https://tobiassoltermann.github.io/media/posts/3/responsive/switch-sm.png 600w ,https://tobiassoltermann.github.io/media/posts/3/responsive/switch-md.png 768w ,https://tobiassoltermann.github.io/media/posts/3/responsive/switch-lg.png 1200w ,https://tobiassoltermann.github.io/media/posts/3/responsive/switch-xl.png 1600w">
      
    </figure>

  <p>
    The top lamp consists of two RGB LED strips. This allows a lot of flexibility in the software. In a future software version, one could imagine the bar of LEDs displaying the quality of the signal, or display different colours depending on the data detected on the card. For now, it just displays an animated startup sequence, and lights up bright-green when a card is held against the front.
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="https://tobiassoltermann.github.io/media/posts/3/40306413211_6b77d4d26b_c.jpg" height="577" width="750" alt=""  sizes="(min-width: 37.5em) 1600px, 80vw" srcset="https://tobiassoltermann.github.io/media/posts/3/responsive/40306413211_6b77d4d26b_c-xs.jpg 384w ,https://tobiassoltermann.github.io/media/posts/3/responsive/40306413211_6b77d4d26b_c-sm.jpg 600w ,https://tobiassoltermann.github.io/media/posts/3/responsive/40306413211_6b77d4d26b_c-md.jpg 768w ,https://tobiassoltermann.github.io/media/posts/3/responsive/40306413211_6b77d4d26b_c-lg.jpg 1200w ,https://tobiassoltermann.github.io/media/posts/3/responsive/40306413211_6b77d4d26b_c-xl.jpg 1600w">
      
    </figure>

  <p>
    As can be seen in the video, the finished build works great and the customer was happy. It certainly was a ton of fun and I have learned something about NFC / RFID as I had never worked with it before.<br>
  </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>jass.games</title>
        <author>
            <name>Tobias Soltermann</name>
        </author>
        <link href="https://tobiassoltermann.github.io/jassgames.html"/>
        <id>https://tobiassoltermann.github.io/jassgames.html</id>

        <updated>2020-04-17T19:55:00+02:00</updated>
            <summary>
                <![CDATA[
                    Overview I’ve built a web-based app to play traditional Swiss game Jass, free of charge for anyone to use on&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                
    <h1 id="overview">
      Overview
    </h1>

  <p>
    I’ve built a web-based app to play traditional Swiss game Jass, free of charge for anyone to use on their computers, laptops or tablets. Click the picture below for a video in action. The game was playable on jass.games, but I have decided to turn it off again because of low usage.
  </p>

    <figure class="post__image post__image--center">
      <img loading="lazy" src="file:///Users/tobias/Documents/Publii/sites/tobias-soltermann/input/media/posts/temp/overview.png" height="949" width="1522" alt=""  sizes="(min-width: 37.5em) 1600px, 80vw" srcset="file:///Users/tobias/Documents/Publii/sites/tobias-soltermann/input/media/posts/temp/responsive/overview-xs.png 384w ,file:///Users/tobias/Documents/Publii/sites/tobias-soltermann/input/media/posts/temp/responsive/overview-sm.png 600w ,file:///Users/tobias/Documents/Publii/sites/tobias-soltermann/input/media/posts/temp/responsive/overview-md.png 768w ,file:///Users/tobias/Documents/Publii/sites/tobias-soltermann/input/media/posts/temp/responsive/overview-lg.png 1200w ,file:///Users/tobias/Documents/Publii/sites/tobias-soltermann/input/media/posts/temp/responsive/overview-xl.png 1600w">
      
    </figure>

    <h1 id="details">
      Details
    </h1>

  <p>
    Every now and then, we like to play a good game of Jass. It is a traditional cards game in Switzerland. There’s probably an uncountable number of variants, but two of the most commonly played flavours are called <a href="https://www.swisslos.ch/en/jass/informations/jass-rules/coiffeur-jass.html" target="_blank">Coiffeur</a> and <a href="https://www.swisslos.ch/en/jass/informations/jass-rules/schieber-jass.html" target="_blank">Schieber</a>.<br>
  </p>

  <p>
    During the rather extraordinary situation raised by COVID-19, playing such a game physically was obviously out of question. While on a video call with best friends we usually play this game with, we researched for a potential substitution of physical play. There were a few apps available for smartphones, but either they were not working reliably enough to play a serious game - or they were not designed for players knowing each other beforehands.<br>
  </p>

  <p>
    I decided to give it a go and build something by myself. Requirements were that it is a web-based solution working on modern browsers, and that it is playable on tablets and computers/laptops. <br><br>
  </p>

  <p>
    Developed with <a href="https://nodejs.org/" target="_blank">Node.JS</a>, <a href="https://reactjs.org/" target="_blank">ReactJS</a>. Most communication happens through websockets using <a href="https://socket.io/" target="_blank">socket.io</a> library. <br><br>All graphical assets are self-made, mostly with <a href="https://inkscape.org/" target="_blank">Inkscape</a> and some <a href="https://www.gimp.org/" target="_blank">GIMP</a>. As a coding IDE, I used <a href="https://code.visualstudio.com/" target="_blank">Visual Studio Code</a>.<br><br>Frontend and backend are running in separate <a href="https://www.docker.com/" target="_blank">Docker</a> containers hosted on <a href="https://www.digitalocean.com/" target="_blank">DigitalOcean</a> cloud.<br><br>
  </p>
            ]]>
        </content>
    </entry>
</feed>
